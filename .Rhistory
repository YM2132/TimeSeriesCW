install.packages("remotes")
remotes::install_github('facebook/prophet@*release', subdir='R')
knitr::opts_chunk$set(echo = TRUE)
library(prophet)
install.packages("prophet")
library(prophet)
library(ggplot2)
# Load the dataset
data <- read.csv('students_by_study_type.csv')
# Filter for "Total" category
total_data <- data[data$Level.of.study == "Total",]
# Create a simple plot with ggplot2
ggplot(total_data, aes(x = Academic.Year, y = Number)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Create a line plot
p <- ggplot(total_data, aes(x = Academic.Year, y = Number)) +
geom_line() +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
# Create a line plot
p <- ggplot(total_data, aes(x = Academic.Year, y = Number)) +
geom_line() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
# Create a line plot
p <- ggplot(total_data, aes(x = Academic.Year, y = Number)) +
geom_line() +
geom_abline()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
# Create a line plot
p <- ggplot(total_data, aes(x = Academic.Year, y = Number)) +
geom_line() +
geom_abline()
# Print the plot
print(p)
# Create a line plot
p <- ggplot(total_data, aes(x = Academic.Year, y = Number)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
# Create a line plot
p <- ggplot(total_data, aes(x = Academic.Year, y = Number)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 180, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
theme_minimal() +
theme(axis.text.x = element_text(angle = 180, hjust = 0.5)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
View(total_data)
# Create a line plot
p <- ggplot(total_data, aes(x = Academic.Year, y = Number)) +
geom_line() +
geom_point()
theme(axis.text.x = element_text(angle = 180, hjust = 0.5)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
View(total_data)
# Create a line plot
p <- ggplot(total_data, aes(x = Academic.Year, y = Number, group=1)) +
geom_line() +
geom_point()
theme(axis.text.x = element_text(angle = 180, hjust = 0.5)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
# Create a line plot
p <- ggplot(total_data, aes(x = Academic.Year, y = Number,  group=1)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
# Rename the columns
names(total_data)[names(total_data) == "Academic.Year"] <- "ds"
names(total_data)[names(total_data) == "Number"] <- "y"
# Create a line plot
p <- ggplot(total_data, aes(x = ds, y = y,  group=1)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
# Print the plot
print(p)
# Create a line plot
p <- ggplot(total_data, aes(x = ds, y = y,  group=1)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
p
```{r, fig.width=10}
```{r, fig.width = 10}
```{r fig.width = 10}
```{r ig.asp = 0.8, fig.width = 10}
library(ggplot2)
# Load the dataset
data <- read.csv('students_by_study_type.csv')
# Filter for "Total" category
total_data <- data[data$Level.of.study == "Total",]
total_data$Academic.Year <- as.Date(paste0(substr(total_data$Academic.Year, 1, 4), "-01-01"))
# Rename the columns
names(total_data)[names(total_data) == "Academic.Year"] <- "ds"
names(total_data)[names(total_data) == "Number"] <- "y"
# Create a line plot
p <- ggplot(total_data, aes(x = ds, y = y,  group=1)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
p
library(ggplot2)
# Load the dataset
data <- read.csv('students_by_study_type.csv')
# Filter for "Total" category
total_data <- data[data$Level.of.study == "Total",]
total_data$Academic.Year <- as.Date(paste0(substr(total_data$Academic.Year, 1, 4), "-01-01"))
# Rename the columns
names(total_data)[names(total_data) == "Academic.Year"] <- "ds"
names(total_data)[names(total_data) == "Number"] <- "y"
# Create a line plot
p <- ggplot(total_data, aes(x = ds, y = y,  group=1)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
p
library(ggplot2)
# Load the dataset
data <- read.csv('students_by_study_type.csv')
# Filter for "Total" category
total_data <- data[data$Level.of.study == "Total",]
total_data$Academic.Year <- as.Date(paste0(substr(total_data$Academic.Year, 1, 4), "-01-01"))
# Rename the columns
names(total_data)[names(total_data) == "Academic.Year"] <- "ds"
names(total_data)[names(total_data) == "Number"] <- "y"
# Create a line plot
p <- ggplot(total_data, aes(x = ds, y = y,  group=1)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
p
library(ggplot2)
# Load the dataset
data <- read.csv('students_by_study_type.csv')
# Filter for "Total" category
total_data <- data[data$Level.of.study == "Total",]
total_data$Academic.Year <- as.Date(paste0(substr(total_data$Academic.Year, 1, 4), "-01-01"))
# Rename the columns
names(total_data)[names(total_data) == "Academic.Year"] <- "ds"
names(total_data)[names(total_data) == "Number"] <- "y"
# Create a line plot
p <- ggplot(total_data, aes(x = ds, y = y,  group=1)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
p
total_data = data.frame(total_data)
total_data
# Load the dataset
data <- read.csv('students_by_study_type.csv')
# Filter for "Total" category
total_data <- data[data$Level.of.study == "Total",]
total_data$Academic.Year <- as.Date(paste0(substr(total_data$Academic.Year, 1, 4), "-01-01"))
```{r}
total_data
# Rename the columns
names(total_data)[names(total_data) == "Academic.Year"] <- "ds"
names(total_data)[names(total_data) == "Number"] <- "y"
total_data
total_data = subset(total_data, select = (ds, y))
total_data = subset(total_data, select = c(ds, y))
total_data
rownames(total_data) <- NULL
total_data
# Create a line plot
p <- ggplot(total_data, aes(x = ds, y = y,  group=1)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
p
library(prophet)
model1 = prophet(total_data)
install.packages("rstan")
library(prophet)
model1 = prophet(total_data)
library(rstan)
install.packages(c("cmdstanr", "posterior"), repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
cmdstanr::install_cmdstan()
cmdstanr::install_cmdstan()
cmdstanr::install_cmdstan(overwrite = TRUE)
library(prophet)
model1 = prophet(total_data)
knitr::opts_chunk$set(echo = TRUE)
library(prophet)
model1 = prophet(total_data)
library(ggplot2)
# Load the dataset
data <- read.csv('students_by_study_type.csv')
# Filter for "Total" category
total_data <- data[data$Level.of.study == "Total",]
total_data$Academic.Year <- as.Date(paste0(substr(total_data$Academic.Year, 1, 4), "-01-01"))
# Rename the columns
names(total_data)[names(total_data) == "Academic.Year"] <- "ds"
names(total_data)[names(total_data) == "Number"] <- "y"
total_data = subset(total_data, select = c(ds, y))
rownames(total_data) <- NULL
# Create a line plot
p <- ggplot(total_data, aes(x = ds, y = y,  group=1)) +
geom_line() +
geom_point()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Total Number of Students per Academic Year",
x = "Academic Year",
y = "Number of Students")
p
library(prophet)
model1 = prophet(total_data)
Sys.setenv(R_STAN_BACKEND = "CMDSTANR")
model1 = prophet(total_data)
library(rstan)
install.packages("rstan")
library(rstan)
remove.packages(c("StanHeaders", "rstan"))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
R.version$arch
readLines("~/.R/Makevars")
cat("CXX14FLAGS += -O3 -arch arm64 -ftemplate-depth-256",
file = "~/.R/Makevars", sep = "\n", append = FALSE)
example(stan_model, package="rstan", run.dontrun=T)
example(stan_model, package="rstan", run.dontrun=T)
readLines("~/.R/Makevars")
R.version$arch
cmdstanr::install_cmdstan()
cmdstanr::install_cmdstan(overwrite = TRUE
)
Sys.setenv(R_STAN_BACKEND = "CMDSTANR")
Sys.setenv(R_STAN_BACKEND = "CMDSTANR")
library(prophet)
model1 = prophet(total_data)
